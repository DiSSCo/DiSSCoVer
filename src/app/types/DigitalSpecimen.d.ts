/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DigitalSpecimen {
  /**
   * The unique identifier of the Digital Specimen object, follows the Digital Object Identifier (DOI) standard
   */
  "@id": string;
  /**
   * The type of the object, in this case ods:DigitalSpecimen
   */
  "@type": "ods:DigitalSpecimen";
  /**
   * The unique identifier of the Digital Specimen object, follows the Digital Object Identifier (DOI) standard.
   */
  "dcterms:identifier": string;
  /**
   * The version of the object, each change generates a new version. The version starts at 1 and each change will increment the version number with 1
   */
  "ods:version": number;
  /**
   * The status of the Digital Object. A digital object can be in Draft, when it is not published yet. Active when it is published and the object is active and Tombstone which means the object has been archived.
   */
  "ods:status"?: "Draft" | "Active" | "Tombstone";
  /**
   * The timestamp that the object was last changed, which resulted in a new version of the object. Following the ISO Date Time Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX
   */
  "dcterms:modified": string;
  /**
   * The timestamp that the object was created in DiSSCo. following the ISO Date Time Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
   */
  "dcterms:created": string;
  /**
   * The DOI to the FDO type of the object
   */
  "ods:fdoType": string;
  /**
   * The level of the Minimum Information about a Digital Specimen of the object, for the full specification see https://www.tdwg.org/community/cd/mids/
   */
  "ods:midsLevel": number;
  /**
   * The physical specimen identifier of the object. When locally unique this is a combination between source-system-id and the local identifier. This identifier is used to check if an object exists in the DiSSCo infrastructure when the DOI is not available.
   */
  "ods:normalisedPhysicalSpecimenID": string;
  /**
   * The physical specimen identifier of the object. The main identifier of the object is used (which can be indicated by the user through the DataMapping). If the ods:physicalSpecimenIDType is Resolvable or Global, this identifier is the same as the `ods:normalisedPhysicalSpecimenID`
   */
  "ods:physicalSpecimenID": string;
  /**
   * To indicate if type of the physical identifier, Resolvable means a resolvable identifier over the internet such as a PURL, Global means a globally unique identifier such as a UUID, Local means a locally identifier unique only within the dataset.
   */
  "ods:physicalSpecimenIDType": "Resolvable" | "Global" | "Local";
  /**
   * Indicates if there are any media objects attached to this specimen
   */
  "ods:isKnownToContainMedia"?: boolean;
  /**
   * The handle to the source system object which retrieved the data from the CMS
   */
  "ods:sourceSystemID": string;
  /**
   * The name of the source system as provided to DiSSCo
   */
  "ods:sourceSystemName"?: string;
  /**
   * Whether the specimen is living or preserved
   */
  "ods:livingOrPreserved"?: "Living" | "Preserved";
  /**
   * The language of the Digital Specimen metadata. Only indicate, not enforced. Recommended to use three letter code from ISO 639-2 codes found on https://id.loc.gov/vocabulary/iso639-2.html
   */
  "ods:metadataLanguages"?: string[];
  /**
   * A legal document giving official permission to do something with the resource.
   */
  "dcterms:license"?: string;
  /**
   * The specific nature of the data record
   */
  "dwc:basisOfRecord"?: string;
  /**
   * The name (or acronym) in use by the institution having custody of the object(s) or information referred to in the record.
   */
  "ods:organisationCode"?: string;
  /**
   * ROR or Wikidata identifier of the organisation
   */
  "ods:organisationID": string;
  /**
   * Primary organisation name according to ROR or Wikidata
   */
  "ods:organisationName"?: string;
  /**
   * The name, acronym, coden, or initialism identifying the collection or data set from which the record was derived
   */
  "dwc:collectionCode"?: string;
  /**
   * An identifier for the collection or dataset from which the record was derived
   */
  "dwc:collectionID"?: string;
  /**
   * Highest-level terms identifying the fundamentals of the activities, in which context the objects in the collection were collected
   */
  "ods:topicOrigin"?: "Natural" | "Human-made" | "Mixed origin" | "Unclassified";
  /**
   * High-level terms providing general domain information with which the objects are associated
   */
  "ods:topicDomain"?:
    | "Life"
    | "Environment"
    | "Earth System"
    | "Extraterrestrial"
    | "Cultural Artefacts"
    | "Archive Material"
    | "Unclassified";
  /**
   * Overarching classification of the scientific discipline to which the objects within the collection belong or are related
   */
  "ods:topicDiscipline"?:
    | "Anthropology"
    | "Botany"
    | "Astrogeology"
    | "Geology"
    | "Microbiology"
    | "Palaeontology"
    | "Zoology"
    | "Ecology"
    | "Other Biodiversity"
    | "Other Geodiversity"
    | "Unclassified";
  /**
   * Countable things (objects) served as a more detailed classification of each of the disciplines
   */
  "ods:topicCategory"?: string;
  /**
   * The accepted specimen name of the digital specimen
   */
  "ods:specimenName"?: string;
  /**
   * Additional information that exists, but that has not been shared in the given record
   */
  "dwc:informationWithheld"?: string;
  /**
   * A list (concatenated and separated) of preparations and preservation methods for a ods:SpecimenPart
   */
  "dwc:preparations"?: string;
  /**
   * The current state of a specimen with respect to a collection
   */
  "dwc:disposition"?: string;
  /**
   * The material entity is marked as a type specimen
   */
  "ods:isMarkedAsType"?: boolean;
  /**
   * Actions taken to make the shared data less specific or complete than in its original form. Suggests that alternative data of higher quality may be available on request
   */
  "dwc:dataGeneralizations"?: string;
  /**
   * The name (or acronym) in use by the institution having ownership of the object(s) or information referred to in the record
   */
  "ods:ownerOrganisationCode"?: string;
  /**
   * The name identifying the data set from which the record was derived
   */
  "dwc:datasetName"?: string;
  /**
   * An identifier for the set of data. May be a global unique identifier or an identifier specific to a collection or institution
   */
  "dwc:datasetID"?: string;
  /**
   * Information about who access the resource or an indication of its security status. Access Rights may include information regarding access or restrictions based on privacy, security, or other policies
   */
  "dcterms:accessRights"?: string;
  /**
   * A person or organization owning or managing rights over the resource
   */
  "dcterms:rightsHolder"?: string;
  /**
   * An identifier for the organism instance. May be a globally unique identifier or an identifier specific to the data set
   */
  "dwc:organismID"?: string;
  /**
   * A textual name or label assigned to an organism instance
   */
  "dwc:organismName"?: string;
  /**
   * A description of the kind of organism instance. Can be used to indicate whether the organism instance represents a discrete organism or if it represents a particular type of aggregation
   */
  "dwc:organismScope"?: string;
  /**
   * Comments or notes about the organism
   */
  "dwc:organismRemarks"?: string;
  /**
   * A number or enumeration value for the quantity of organisms
   */
  "dwc:organismQuantity"?: string;
  /**
   * A dwc:organismQuantityType must have a corresponding dwc:organismQuantity
   */
  "dwc:organismQuantityType"?: string;
  /**
   * The content of this term should include no embellishments, prefixes, headers or other additions made to the text. Abbreviations must not be expanded and supposed misspellings must not be corrected. Lines or breakpoints between blocks of text that could be verified by seeing the original labels or images of them may be used. Examples of material entities include preserved specimens, fossil specimens, and material samples. Best practice is to use UTF-8 for all characters
   */
  "dwc:verbatimLabel"?: string;
  /**
   * A list of additional measurements, facts, characteristics, or assertions about the record. Meant to provide a mechanism for structured content
   */
  "dwc:dynamicProperties"?: string;
  /**
   * Contains all specimen parts that are part of this Digital Specimen based on for example a shared registration number
   *
   * @minItems 0
   */
  "ods:hasSpecimenParts"?: SpecimenPart[];
  /**
   * Contains any assertions that can be made about the specimen, such as measurements
   */
  "ods:hasAssertions"?: Assertion2[];
  /**
   * Contains relationships to external resources that provide further information about the specimen, for example about the taxonomy or the organisation
   */
  "ods:hasEntityRelationships"?: EntityRelationship[];
  /**
   * Contains all identification that have been made on the specimen
   */
  "ods:hasIdentifications"?: Identification1[];
  /**
   * Contains all identifiers that are connected to the specimen, either about the physical or digital specimen
   */
  "ods:hasIdentifiers"?: Identifier2[];
  /**
   * Contains information about any publication in which this specimen is mentioned
   */
  "ods:hasCitations"?: Citation2[];
  /**
   * Contains all agents that are connected to the specimen. Agents that are part of a specific part of the specimen should be added there. For example a Collector is connected to the CollectingEvent so is add in the event
   */
  "ods:hasAgents"?: Agent8[];
  /**
   * Contains information about any events that occurred specifically on the specimen part, for example a sampling event
   */
  "ods:hasEvents"?: Event1[];
  /**
   * Contains information about the chronometric age of the specimen part
   */
  "ods:hasChronometricAges"?: ChronometricAge1[];
  "ods:hasTombstoneMetadata"?: TombstoneMetadata;
}
export interface SpecimenPart {
  /**
   * The identifier for the Specimen Part object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:SpecimenPart
   */
  "@type": "ods:SpecimenPart";
  /**
   * An identifier for a particular instance of a ods:SpecimenPart. Note that if this is a registration number the suggested approach is to create a separate Digital Specimen for the entity
   */
  "dwc:materialEntityID"?: string;
  /**
   * An identifier given to a ods:SpecimenPart at the time it was recorded. Often serves as a link between field notes and a specimen record, such as a specimen collector's number
   */
  "dwc:recordNumber"?: string;
  /**
   * A list (concatenated and separated) of preparations and preservation methods for a ods:SpecimenPart
   */
  "dwc:preparations"?: string;
  /**
   * The material entity is marked as a type specimen
   */
  "ods:isMarkedAsType"?: boolean;
  /**
   * Highest-level terms identifying the fundamentals of the activities, in which context the objects in the collection were collected
   */
  "ods:topicOrigin"?: "Natural" | "Human-made" | "Mixed origin" | "Unclassified";
  /**
   * High-level terms providing general domain information with which the objects are associated
   */
  "ods:topicDomain"?:
    | "Life"
    | "Environment"
    | "Earth System"
    | "Extraterrestrial"
    | "Cultural Artefacts"
    | "Archive Material"
    | "Unclassified";
  /**
   * Overarching classification of the scientific discipline to which the objects within the collection belong or are related
   */
  "ods:topicDiscipline"?:
    | "Anthropology"
    | "Botany"
    | "Astrogeology"
    | "Geology"
    | "Microbiology"
    | "Palaeontology"
    | "Zoology"
    | "Ecology"
    | "Other Biodiversity"
    | "Other Geodiversity"
    | "Unclassified";
  /**
   * Countable things (objects) served as a more detailed classification of each of the disciplines
   */
  "ods:topicCategory"?: string;
  /**
   * The accepted specimen name of the digital specimen
   */
  "ods:specimenName"?: string;
  /**
   * An identifier for the organism instance. May be a globally unique identifier or an identifier specific to the data set
   */
  "dwc:organismID"?: string;
  /**
   * A textual name or label assigned to an organism instance
   */
  "dwc:organismName"?: string;
  /**
   * A description of the kind of organism instance. Can be used to indicate whether the organism instance represents a discrete organism or if it represents a particular type of aggregation
   */
  "dwc:organismScope"?: string;
  /**
   * Comments or notes about the organism
   */
  "dwc:organismRemarks"?: string;
  /**
   * A number or enumeration value for the quantity of organisms
   */
  "dwc:organismQuantity"?: string;
  /**
   * A dwc:organismQuantityType must have a corresponding dwc:organismQuantity
   */
  "dwc:organismQuantityType"?: string;
  /**
   * Contains the identifications made for the specimen part
   */
  "ods:hasIdentifications"?: Identification[];
  /**
   * Contains assertions that are specific to the specimen part, such as measurements
   */
  "ods:hasAssertions"?: Assertion[];
  /**
   * Contains identifiers that are specific to the specimen part
   */
  "ods:hasIdentifiers"?: Identifier1[];
  /**
   * Contains information about any events that occurred specifically on the specimen part, for example a sampling event
   */
  "ods:hasEvents"?: Event[];
  /**
   * Contains agents that are specifically connect to the specimen part
   */
  "ods:hasAgents"?: Agent5[];
  /**
   * Contains information about the chronometric age of the specimen part
   */
  "ods:hasChronometricAges"?: ChronometricAge[];
}
export interface Identification {
  /**
   * The identifier for the Identification object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Identification
   */
  "@type": "ods:Identification";
  /**
   * https://rs.tdwg.org/dwc/terms/identificationID
   */
  "dwc:identificationID"?: string;
  /**
   * Indicates the type of identification. At the moment only ods:TaxonIdentification is supports. Expected to be extend with identification types for Geological or Mineral Identifications
   */
  "ods:identificationType"?: "TaxonIdentification";
  /**
   * A string representing the identification as it appeared in the original record
   */
  "dwc:verbatimIdentification"?: string;
  /**
   * A list (concatenated and separated) of nomenclatural types (type status, typified scientific name, publication) applied to the subject
   */
  "dwc:typeStatus"?: string;
  /**
   * The date on which the subject was determined
   */
  "dwc:dateIdentified"?: string;
  /**
   * If this is the accepted identification, based on https://rs.tdwg.org/dwc/terms/identificationVerificationStatus
   */
  "ods:isVerifiedIdentification": boolean;
  /**
   * Comments or notes about the ods:Identification
   */
  "dwc:identificationRemarks"?: string;
  /**
   * A brief phrase or a standard term ("cf.", "aff.") to express the determiner's doubts about the dwc:Identification
   */
  "dwc:identificationQualifier"?: string;
  /**
   * The agent(s) involved in the identification, uses `ods:Agent`
   */
  "ods:hasAgents"?: Agent[];
  /**
   * Any citations associated with the identification
   */
  "ods:hasCitations"?: Citation[];
  /**
   * Contains the Taxonomic Identifications of the object
   */
  "ods:hasTaxonIdentifications"?: TaxonIdentification[];
}
export interface Agent {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
/**
 * Object used to describe identifiers of a Digital Object, based on https://rs.gbif.org/extension/gbif/1.0/identifier.xml but includes ods specific terms
 */
export interface Identifier {
  /**
   * The identifier for the Identifier object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Identifier
   */
  "@type": "ods:Identifier";
  /**
   * A name for the identifier
   */
  "dcterms:title": string;
  /**
   * The type of the value in the `dcterms:identifier` field
   */
  "dcterms:type"?:
    | "ARK"
    | "arXiv"
    | "bibcode"
    | "DOI"
    | "EAN13"
    | "EISSN"
    | "Handle"
    | "IGSN"
    | "ISBN"
    | "ISSN"
    | "ISTC"
    | "LISSN"
    | "LSID"
    | "PMID"
    | "PURL"
    | "UPC"
    | "URL"
    | "URN"
    | "w3id"
    | "UUID"
    | "Other"
    | "Locally unique identifier";
  /**
   * The value for the identifier
   */
  "dcterms:identifier": string;
  /**
   * All possible mime types of content that can be returned by identifier in case the identifier is resolvable. Plain UUIDs for example do not have a dc:format return type, as they are not resolvable on their own. For a list of MIME types see the list maintained by IANA: http://www.iana.org/assignments/media-types/index.html, in particular the text http://www.iana.org/assignments/media-types/text/ and application http://www.iana.org/assignments/media-types/application/ types. Frequently used values are text/html, text/xml, application/rdf+xml, application/json
   */
  "dcterms:format"?: string[];
  /**
   * Additional keywords that the publisher may prefer to be attached to the identifier
   */
  "dcterms:subject"?: string[];
  /**
   * Indicates whether the identifier is part of the physical label
   */
  "ods:isPartOfLabel"?: boolean;
  /**
   * Indicates whether the identifier is a persistent identifier
   */
  "ods:gupriLevel"?:
    | "LocallyUniqueStable"
    | "GloballyUniqueStable"
    | "GloballyUniqueStableResolvable"
    | "GloballyUniqueStablePersistentResolvable"
    | "GloballyUniqueStablePersistentResolvableFDOCompliant";
  /**
   * Indicates the status of the identifier
   */
  "ods:identifierStatus"?: "Preferred" | "Alternative" | "Superseded";
}
/**
 * Based on https://rs.gbif.org/extension/gbif/1.0/references.xml but includes ods specific terms
 */
export interface Citation {
  /**
   * The main identifier of the citation, preferably a DOI, ISBN, URI, etc referring to the reference
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Citation
   */
  "@type": "ods:Citation";
  /**
   * The main identifier of the citation, preferably a DOI, ISBN, URI, etc referring to the reference
   */
  "dcterms:identifier"?: string;
  /**
   * The category that best matches the nature of a reference
   */
  "dcterms:type"?: string;
  /**
   * Date of publication
   */
  "dcterms:date"?: string;
  /**
   * Title of publication
   */
  "dcterms:title"?: string;
  /**
   * Page number of the citation
   */
  "ods:pageNumber"?: string;
  /**
   * Abstracts, remarks, notes
   */
  "dcterms:description"?: string;
  /**
   * A bibliographic reference for the resource
   */
  "dcterms:bibliographicCitation": string;
  /**
   * Is the citation peer reviewed?
   */
  "ods:isPeerReviewed"?: boolean;
  /**
   * The agent(s) who made the publication, contains an ods:Agent object
   */
  "ods:hasAgents"?: Agent1[];
}
export interface Agent1 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
export interface TaxonIdentification {
  /**
   * The identifier for the Taxon Identification object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:TaxonIdentification
   */
  "@type": "ods:TaxonIdentification";
  /**
   * An identifier for the set of dwc:Taxon information. May be a global unique identifier or an identifier specific to the data set
   */
  "dwc:taxonID"?: string;
  /**
   * The full scientific name, with authorship and date information if known. This should be the name in lowest level taxonomic rank that can be determined. This term should not contain identification qualifications, which should instead be supplied in the dwc:identificationQualifier term
   */
  "dwc:scientificName": string;
  /**
   * An identifier for the nomenclatural (not taxonomic) details of a scientific name
   */
  "dwc:scientificNameID"?: string;
  /**
   * A Hyper Text Markup Language (HTML) representation of the scientific name. Includes correct formatting of the name.
   */
  "ods:scientificNameHTMLLabel"?: string;
  /**
   * A Hyper Text Markup Language (HTML) representation of the genus name. Includes correct formatting of the name.
   */
  "ods:genusHTMLLabel"?: string;
  /**
   * The authorship information for the dwc:scientificName formatted according to the conventions of the applicable dwc:nomenclaturalCode
   */
  "dwc:scientificNameAuthorship"?: string;
  /**
   * The four-digit year in which the dwc:scientificName was published
   */
  "dwc:namePublishedInYear"?: string;
  /**
   * The taxonomic rank of the most specific name in the dwc:scientificName
   */
  "dwc:taxonRank"?: string;
  /**
   * The taxonomic rank of the most specific name in the dwc:scientificName as it appears in the original record
   */
  "dwc:verbatimTaxonRank"?: string;
  /**
   * Comments or notes about the taxon or name
   */
  "dwc:taxonRemarks"?: string;
  /**
   * The full scientific name of the kingdom in which the ods:TaxonIdentification is classified
   */
  "dwc:kingdom"?: string;
  /**
   * The full scientific name of the phylum or division in which the ods:TaxonIdentification is classified
   */
  "dwc:phylum"?: string;
  /**
   * The full scientific name of the class in which the ods:TaxonIdentification is classified
   */
  "dwc:class"?: string;
  /**
   * The full scientific name of the order in which the ods:TaxonIdentification is classified
   */
  "dwc:order"?: string;
  /**
   * The full scientific name of the family in which the ods:TaxonIdentification is classified
   */
  "dwc:family"?: string;
  /**
   * The full scientific name of the subfamily in which the ods:TaxonIdentification is classified
   */
  "dwc:subfamily"?: string;
  /**
   * The full scientific name of the genus in which the ods:TaxonIdentification is classified
   */
  "dwc:genus"?: string;
  /**
   * The name of the first or species epithet of the dwc:scientificName
   */
  "dwc:specificEpithet"?: string;
  /**
   * The status of the use of the dwc:scientificName as a label for a taxon. Requires taxonomic opinion to define the scope of a ods:TaxonIdentification. Rules of priority then are used to define the taxonomic status of the nomenclature contained in that scope, combined with the experts opinion. It must be linked to a specific taxonomic reference that defines the concept
   */
  "dwc:taxonomicStatus"?: string;
  /**
   * The nomenclatural code (or codes in the case of an ambiregnal name) under which the dwc:scientificName is constructed
   */
  "dwc:nomenclaturalCode"?: string;
  /**
   * A common or vernacular name
   */
  "dwc:vernacularName"?: string;
  /**
   * The full scientific name of the subgenus in which the ods:TaxonIdentification is classified. Values should include the genus to avoid homonym confusion
   */
  "dwc:subgenus"?: string;
  /**
   * The full name, with authorship and date information if known, of the currently valid (zoological) or accepted (botanical) ods:TaxonIdentification
   */
  "dwc:acceptedNameUsage"?: string;
  /**
   * An identifier for the name usage (documented meaning of the name according to a source) of the currently valid (zoological) or accepted (botanical) taxon
   */
  "dwc:acceptedNameUsageID"?: string;
  /**
   * Part of the name of a cultivar, cultivar group or grex that follows the dwc:scientificName
   */
  "dwc:cultivarEpithet"?: string;
  /**
   * The genus part of the dwc:scientificName without authorship
   */
  "dwc:genericName"?: string;
  /**
   * The infrageneric part of a binomial name at ranks above species but below genus
   */
  "dwc:infragenericEpithet"?: string;
  /**
   * The name of the lowest or terminal infraspecific epithet of the dwc:scientificName, excluding any rank designation
   */
  "dwc:infraspecificEpithet"?: string;
  /**
   * The status related to the original publication of the name and its conformance to the relevant rules of nomenclature. It is based essentially on an algorithm according to the business rules of the code. It requires no taxonomic opinion
   */
  "dwc:nomenclaturalStatus"?: string;
  /**
   * The taxon name, with authorship and date information if known, as it originally appeared when first established under the rules of the associated dwc:nomenclaturalCode. The basionym (botany) or basonym (bacteriology) of the dwc:scientificName or the senior/earlier homonym for replaced names
   */
  "dwc:originalNameUsage"?: string;
  /**
   * The full scientific name of the subtribe in which the ods:TaxonIdentification is classified
   */
  "dwc:subtribe"?: string;
  /**
   * The full scientific name of the superfamily in which the ods:TaxonIdentification is classified
   */
  "dwc:superfamily"?: string;
  /**
   * The full scientific name of the tribe in which the ods:TaxonIdentification is classified
   */
  "dwc:tribe"?: string;
}
export interface Assertion {
  /**
   * Identical to the `dwc:measurementID`. An identifier for the dwc:MeasurementOrFact (information pertaining to measurements, facts, characteristics, or assertions). May be a global unique identifier or an identifier specific to the data set
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Assertion
   */
  "@type": "ods:Assertion";
  /**
   * An identifier for the dwc:MeasurementOrFact (information pertaining to measurements, facts, characteristics, or assertions). May be a global unique identifier or an identifier specific to the data set
   */
  "dwc:measurementID"?: string;
  /**
   * An identifier for a broader dwc:MeasurementOrFact that groups this and potentially other ods:Assertions
   */
  "dwc:parentMeasurementID"?: string;
  /**
   * The nature of the assertion
   */
  "dwc:measurementType"?: string;
  /**
   * The nature of the assertion
   */
  "dwciri:measurementType"?: string;
  /**
   * The date on which the dwc:MeasurementOrFact was made
   */
  "dwc:measurementDeterminedDate"?: string;
  /**
   * The value of the assertion
   */
  "dwc:measurementValue"?: string;
  /**
   * The value of the assertion
   */
  "dwciri:measurementValue"?: string;
  /**
   * The description of the potential error associated with the dwc:measurementValue
   */
  "dwc:measurementAccuracy"?: string;
  /**
   * The units associated with the dwc:measurementValue
   */
  "dwc:measurementUnit"?: string;
  /**
   * The units associated with the dwc:measurementValue
   */
  "dwciri:measurementUnit"?: string;
  /**
   * A description of or reference to (publication, URI) the method or protocol used to determine the measurement, fact, characteristic, or assertion
   */
  "dwc:measurementMethod"?: string;
  /**
   * A description of or reference to (publication, URI) the method or protocol used to determine the measurement, fact, characteristic, or assertion
   */
  "dwciri:measurementMethod"?: string;
  /**
   * Comments or notes accompanying the dwc:MeasurementOrFact
   */
  "dwc:measurementRemarks"?: string;
  /**
   * The agent(s) who made the assertion, contains an ods:Agent object
   */
  "ods:hasAgents"?: Agent2[];
  /**
   * Contains the publication citation(s) that support the assertion
   */
  "ods:hasCitations"?: Citation1[];
}
export interface Agent2 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
/**
 * Based on https://rs.gbif.org/extension/gbif/1.0/references.xml but includes ods specific terms
 */
export interface Citation1 {
  /**
   * The main identifier of the citation, preferably a DOI, ISBN, URI, etc referring to the reference
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Citation
   */
  "@type": "ods:Citation";
  /**
   * The main identifier of the citation, preferably a DOI, ISBN, URI, etc referring to the reference
   */
  "dcterms:identifier"?: string;
  /**
   * The category that best matches the nature of a reference
   */
  "dcterms:type"?: string;
  /**
   * Date of publication
   */
  "dcterms:date"?: string;
  /**
   * Title of publication
   */
  "dcterms:title"?: string;
  /**
   * Page number of the citation
   */
  "ods:pageNumber"?: string;
  /**
   * Abstracts, remarks, notes
   */
  "dcterms:description"?: string;
  /**
   * A bibliographic reference for the resource
   */
  "dcterms:bibliographicCitation": string;
  /**
   * Is the citation peer reviewed?
   */
  "ods:isPeerReviewed"?: boolean;
  /**
   * The agent(s) who made the publication, contains an ods:Agent object
   */
  "ods:hasAgents"?: Agent1[];
}
/**
 * Object used to describe identifiers of a Digital Object, based on https://rs.gbif.org/extension/gbif/1.0/identifier.xml but includes ods specific terms
 */
export interface Identifier1 {
  /**
   * The identifier for the Identifier object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Identifier
   */
  "@type": "ods:Identifier";
  /**
   * A name for the identifier
   */
  "dcterms:title": string;
  /**
   * The type of the value in the `dcterms:identifier` field
   */
  "dcterms:type"?:
    | "ARK"
    | "arXiv"
    | "bibcode"
    | "DOI"
    | "EAN13"
    | "EISSN"
    | "Handle"
    | "IGSN"
    | "ISBN"
    | "ISSN"
    | "ISTC"
    | "LISSN"
    | "LSID"
    | "PMID"
    | "PURL"
    | "UPC"
    | "URL"
    | "URN"
    | "w3id"
    | "UUID"
    | "Other"
    | "Locally unique identifier";
  /**
   * The value for the identifier
   */
  "dcterms:identifier": string;
  /**
   * All possible mime types of content that can be returned by identifier in case the identifier is resolvable. Plain UUIDs for example do not have a dc:format return type, as they are not resolvable on their own. For a list of MIME types see the list maintained by IANA: http://www.iana.org/assignments/media-types/index.html, in particular the text http://www.iana.org/assignments/media-types/text/ and application http://www.iana.org/assignments/media-types/application/ types. Frequently used values are text/html, text/xml, application/rdf+xml, application/json
   */
  "dcterms:format"?: string[];
  /**
   * Additional keywords that the publisher may prefer to be attached to the identifier
   */
  "dcterms:subject"?: string[];
  /**
   * Indicates whether the identifier is part of the physical label
   */
  "ods:isPartOfLabel"?: boolean;
  /**
   * Indicates whether the identifier is a persistent identifier
   */
  "ods:gupriLevel"?:
    | "LocallyUniqueStable"
    | "GloballyUniqueStable"
    | "GloballyUniqueStableResolvable"
    | "GloballyUniqueStablePersistentResolvable"
    | "GloballyUniqueStablePersistentResolvableFDOCompliant";
  /**
   * Indicates the status of the identifier
   */
  "ods:identifierStatus"?: "Preferred" | "Alternative" | "Superseded";
}
/**
 * Contains all information about a particular Event, which is an activity at a moment in time, at a specific location made by an agent
 */
export interface Event {
  /**
   * The identifier for the Event object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case ods:Event
   */
  "@type": "ods:Event";
  /**
   * The behavior shown by the subject at the time the event was recorded
   */
  "dwc:behavior"?: string;
  /**
   * The nature of the ods:Event. There can always be only one collecting event
   */
  "dwc:eventType"?: string;
  /**
   * The sex of the biological individual(s) represented in the dwc:Event
   */
  "dwc:sex"?: string;
  /**
   * The age class or life stage at the time the ods:Event was recorded
   */
  "dwc:lifeStage"?: string;
  /**
   * The reproductive condition of the biological individual(s) represented in the ods:Event.
   */
  "dwc:reproductiveCondition"?: string;
  /**
   * Categorisation of individuals for eusocial species (including some mammals and arthropods)
   */
  "dwc:caste"?: string;
  /**
   * An indication of whether the specimen was alive or dead at the time of collection or observation
   */
  "dwc:vitality"?: string;
  /**
   * Statement about whether a organism has been introduced to a given place and time through the direct or indirect activity of modern humans
   */
  "dwc:establishmentMeans"?: string;
  /**
   * The process by which an organism came to be in a given place at a given time
   */
  "dwc:pathway"?: string;
  /**
   * The degree to which an organism survives, reproduces, and expands its range at the given place and time
   */
  "dwc:degreeOfEstablishment"?: string;
  /**
   * A categorical description of the extent to which the georeference has been verified to represent the best possible spatial description for the ods:Location of the ods:Event
   */
  "dwc:georeferenceVerificationStatus"?: string;
  /**
   * An identifier given to the ods:Event in the field. Often serves as a link between field notes and the ods:Event
   */
  "dwc:fieldNumber"?: string;
  /**
   * The date-time or interval during which a ods:Event occurred. For occurrences, this is the date-time when the ods:Event was recorded. Not suitable for a time in a geological context
   */
  "dwc:eventDate"?: string;
  /**
   * The time or interval during which a ods:Event occurred
   */
  "dwc:eventTime"?: string;
  /**
   * The latest integer day of the year on which the ods:Event occurred (1 for January 1, 365 for December 31, except in a leap year, in which case it is 366)
   */
  "dwc:endDayOfYear"?: number;
  /**
   * The earliest integer day of the year on which the ods:Event occurred (1 for January 1, 365 for December 31, except in a leap year, in which case it is 366)
   */
  "dwc:startDayOfYear"?: number;
  /**
   * The verbatim original representation of the date and time information for a ods:Event
   */
  "dwc:verbatimEventDate"?: string;
  /**
   * The four-digit year in which the ods:Event occurred, according to the Common Era Calendar
   */
  "dwc:year"?: number;
  /**
   * The integer month in which the ods:Event occurred
   */
  "dwc:month"?: number;
  /**
   * The integer day of the month on which the ods:Event occurred
   */
  "dwc:day"?: number;
  /**
   * A category or description of the habitat in which the ods:Event occurred
   */
  "dwc:habitat"?: string;
  /**
   * A detailed description of the methods used during the ods:Event
   */
  "eco:protocolDescriptions"?: string;
  /**
   * A numeric value for a measurement of the size (time duration, length, area, or volume) of a sample in a sampling ods:Event
   */
  "dwc:sampleSizeValue"?: number;
  /**
   * The unit of measurement of the size (time duration, length, area, or volume) of a sample in a sampling ods:Event
   */
  "dwc:sampleSizeUnit"?: string;
  /**
   * The names of, references to, or descriptions of the methods or protocols used during a ods:Event
   */
  "dwc:samplingProtocol"?: string;
  /**
   * The amount of effort expended during a ods:Event
   */
  "dwc:samplingEffort"?: string;
  /**
   * One of a) an indicator of the existence of, b) a reference to (publication, URI), or c) the text of notes taken in the field about the ods:Event
   */
  "dwc:fieldNotes"?: string;
  /**
   * Comments or notes about the ods:Event
   */
  "dwc:eventRemarks"?: string;
  /**
   * Contains additional information about the ods:Event in the form of assertions
   */
  "ods:hasAssertions"?: Assertion1[];
  /**
   * Contains all agents that are connected to the specific event
   */
  "ods:hasAgents"?: Agent3[];
  "ods:hasLocation"?: Location;
}
export interface Assertion1 {
  /**
   * Identical to the `dwc:measurementID`. An identifier for the dwc:MeasurementOrFact (information pertaining to measurements, facts, characteristics, or assertions). May be a global unique identifier or an identifier specific to the data set
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Assertion
   */
  "@type": "ods:Assertion";
  /**
   * An identifier for the dwc:MeasurementOrFact (information pertaining to measurements, facts, characteristics, or assertions). May be a global unique identifier or an identifier specific to the data set
   */
  "dwc:measurementID"?: string;
  /**
   * An identifier for a broader dwc:MeasurementOrFact that groups this and potentially other ods:Assertions
   */
  "dwc:parentMeasurementID"?: string;
  /**
   * The nature of the assertion
   */
  "dwc:measurementType"?: string;
  /**
   * The nature of the assertion
   */
  "dwciri:measurementType"?: string;
  /**
   * The date on which the dwc:MeasurementOrFact was made
   */
  "dwc:measurementDeterminedDate"?: string;
  /**
   * The value of the assertion
   */
  "dwc:measurementValue"?: string;
  /**
   * The value of the assertion
   */
  "dwciri:measurementValue"?: string;
  /**
   * The description of the potential error associated with the dwc:measurementValue
   */
  "dwc:measurementAccuracy"?: string;
  /**
   * The units associated with the dwc:measurementValue
   */
  "dwc:measurementUnit"?: string;
  /**
   * The units associated with the dwc:measurementValue
   */
  "dwciri:measurementUnit"?: string;
  /**
   * A description of or reference to (publication, URI) the method or protocol used to determine the measurement, fact, characteristic, or assertion
   */
  "dwc:measurementMethod"?: string;
  /**
   * A description of or reference to (publication, URI) the method or protocol used to determine the measurement, fact, characteristic, or assertion
   */
  "dwciri:measurementMethod"?: string;
  /**
   * Comments or notes accompanying the dwc:MeasurementOrFact
   */
  "dwc:measurementRemarks"?: string;
  /**
   * The agent(s) who made the assertion, contains an ods:Agent object
   */
  "ods:hasAgents"?: Agent2[];
  /**
   * Contains the publication citation(s) that support the assertion
   */
  "ods:hasCitations"?: Citation1[];
}
export interface Agent3 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
/**
 * Contains the spatial region or named place of where the ods:Event took place
 */
export interface Location {
  /**
   * The identifier for the Location object. Contains the same information as the dwc:locationID
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Location
   */
  "@type": "ods:Location";
  /**
   * An identifier for the set of ods:Location information. May be a global unique identifier or an identifier specific to the data set
   */
  "dwc:locationID"?: string;
  /**
   * The name of the continent in which the ods:Location occurs
   */
  "dwc:continent"?: string;
  /**
   * The name of the water body in which the ods:Location occurs
   */
  "dwc:waterBody"?: string;
  /**
   * The name of the island group in which the ods:Location occurs
   */
  "dwc:islandGroup"?: string;
  /**
   * The name of the island on or near which the ods:Location occurs
   */
  "dwc:island"?: string;
  /**
   * The name of the country or major administrative unit in which the ods:Location occurs
   */
  "dwc:country"?: string;
  /**
   * The standard code for the country in which the ods:Location occurs
   */
  "dwc:countryCode"?: string;
  /**
   * The name of the next smaller administrative region than country (state, province, canton, department, region, etc.) in which the ods:Location occurs
   */
  "dwc:stateProvince"?: string;
  /**
   * The full, unabbreviated name of the next smaller administrative region than stateProvince (county, shire, department, etc.) in which the ods:Location occurs
   */
  "dwc:county"?: string;
  /**
   * The full, unabbreviated name of the next smaller administrative region than county (city, municipality, etc.) in which the ods:Location occurs. Do not use this term for a nearby named place that does not contain the actual ods:Location
   */
  "dwc:municipality"?: string;
  /**
   * The specific description of the place
   */
  "dwc:locality"?: string;
  /**
   * The original textual description of the place
   */
  "dwc:verbatimLocality"?: string;
  /**
   * The lower limit of the range of elevation (altitude, usually above sea level), in meters
   */
  "dwc:minimumElevationInMeters"?: number;
  /**
   * An identifier for the geographic region within which the ods:Location occurred
   */
  "dwc:higherGeographyID"?: string;
  /**
   * A list (concatenated and separated) of geographic names less specific than the information captured in the dwc:locality term
   */
  "dwc:higherGeography"?: string;
  /**
   * The upper limit of the range of elevation (altitude, usually above sea level), in meters
   */
  "dwc:maximumElevationInMeters"?: number;
  /**
   * The original description of the elevation (altitude, usually above sea level) of the ods:Location
   */
  "dwc:verbatimElevation"?: string;
  /**
   * The lesser distance in a range of distance from a reference surface in the vertical direction, in meters. Use positive values for locations above the surface, negative values for locations below. If depth measures are given, the reference surface is the location given by the depth, otherwise the reference surface is the location given by the elevation
   */
  "dwc:minimumDistanceAboveSurfaceInMeters"?: number;
  /**
   * The greater distance in a range of distance from a reference surface in the vertical direction, in meters. Use positive values for locations above the surface, negative values for locations below. If depth measures are given, the reference surface is the location given by the depth, otherwise the reference surface is the location given by the elevation
   */
  "dwc:maximumDistanceAboveSurfaceInMeters"?: number;
  /**
   * The lesser depth of a range of depth below the local surface, in meters
   */
  "dwc:minimumDepthInMeters"?: number;
  /**
   * The greater depth of a range of depth below the local surface, in meters
   */
  "dwc:maximumDepthInMeters"?: number;
  /**
   * The original description of the depth below the local surface
   */
  "dwc:verbatimDepth"?: string;
  /**
   * The vertical datum used as the reference upon which the values in the elevation terms are based
   */
  "dwc:verticalDatum"?: string;
  /**
   * Information about the source of this ods:Location information. Could be a publication (gazetteer), institution, or team of individuals
   */
  "dwc:locationAccordingTo"?: string;
  /**
   * Comments or notes about the ods:Location
   */
  "dwc:locationRemarks"?: string;
  "ods:hasGeoreference"?: Georeference;
  "ods:hasGeologicalContext"?: GeologicalContext;
}
/**
 * An object which describes the geographical reference of the location of the specimen
 */
export interface Georeference {
  /**
   * The identifier for the Geo Reference object.
   */
  "@id"?: string;
  /**
   * The type of the object, in this case ods:Georeference
   */
  "@type": "ods:Georeference";
  /**
   * The verbatim original spatial coordinates of the ods:Location. The coordinate ellipsoid, geodeticDatum, or full Spatial Reference System (SRS) for these coordinates should be stored in dwc:verbatimSRS and the coordinate system should be stored in dwc:verbatimCoordinateSystem
   */
  "dwc:verbatimCoordinates"?: string;
  /**
   * The geographic latitude (in decimal degrees, using the spatial reference system given in dwc:geodeticDatum) of the geographic center of a ods:Location. Positive values are north of the Equator, negative values are south of it. Legal values lie between -90 and 90, inclusive
   */
  "dwc:decimalLatitude"?: number;
  /**
   * The verbatim original latitude of the ods:Location. The coordinate ellipsoid, geodeticDatum, or full Spatial Reference System (SRS) for these coordinates should be stored in dwc:verbatimSRS and the coordinate system should be stored in dwc:verbatimCoordinateSystem
   */
  "dwc:verbatimLatitude"?: string;
  /**
   * The geographic longitude (in decimal degrees, using the spatial reference system given in dwc:geodeticDatum) of the geographic center of a ods:Location. Positive values are east of the Greenwich Meridian, negative values are west of it. Legal values lie between -180 and 180, inclusive
   */
  "dwc:decimalLongitude"?: number;
  /**
   * The verbatim original longitude of the ods:Location. The coordinate ellipsoid, geodeticDatum, or full Spatial Reference System (SRS) for these coordinates should be stored in dwc:verbatimSRS and the coordinate system should be stored in dwc:verbatimCoordinateSystem
   */
  "dwc:verbatimLongitude"?: string;
  /**
   * The coordinate format for the dwc:verbatimLatitude and dwc:verbatimLongitude or the dwc:verbatimCoordinates of the ods:Location
   */
  "dwc:verbatimCoordinateSystem"?: string;
  /**
   * The ellipsoid, geodetic datum, or spatial reference system (SRS) upon which the geographic coordinates given in dwc:decimalLatitude and dwc:decimalLongitude are based
   */
  "dwc:geodeticDatum"?: string;
  /**
   * The horizontal distance (in meters) from the given dwc:decimalLatitude and dwc:decimalLongitude describing the smallest circle containing the whole of the ods:Location. Leave the value empty if the uncertainty is unknown, cannot be estimated, or is not applicable (because there are no coordinates). Zero is not a valid value for this term
   */
  "dwc:coordinateUncertaintyInMeters"?: number;
  /**
   * A decimal representation of the precision of the coordinates given in the dwc:decimalLatitude and dwc:decimalLongitude
   */
  "dwc:coordinatePrecision"?: number;
  /**
   * The ratio of the area of the point-radius (dwc:decimalLatitude, dwc:decimalLongitude, dwc:coordinateUncertaintyInMeters) to the area of the true (original, or most specific) spatial representation of the ods:Location. Legal values are 0, greater than or equal to 1, or undefined. A value of 1 is an exact match or 100% overlap. A value of 0 should be used if the given point-radius does not completely contain the original representation. The dwc:pointRadiusSpatialFit is undefined (and should be left empty) if the original representation is any geometry without area (e.g., a point or polyline) and without uncertainty and the given georeference is not that same geometry (without uncertainty). If both the original and the given georeference are the same point, the dwc:pointRadiusSpatialFit is 1
   */
  "dwc:pointRadiusSpatialFit"?: number;
  /**
   * A Well-Known Text (WKT) representation of the shape (footprint, geometry) that defines the ods:Location. A ods:Location may have both a point-radius representation (see dwc:decimalLatitude) and a footprint representation, and they may differ from each other
   */
  "dwc:footprintWKT"?: string;
  /**
   * https://rs.tdwg.org/dwc/terms/footprintSRS
   */
  "dwc:footprintSRS"?: string;
  /**
   * The ellipsoid, geodetic datum, or spatial reference system (SRS) upon which the geometry given in dwc:footprintWKT is based
   */
  "dwc:verbatimSRS"?: string;
  /**
   * The ratio of the area of the dwc:footprintWKT to the area of the true (original, or most specific) spatial representation of the ods:Location. Legal values are 0, greater than or equal to 1, or undefined. A value of 1 is an exact match or 100% overlap. A value of 0 should be used if the given dwc:footprintWKT does not completely contain the original representation. The dwc:footprintSpatialFit is undefined (and should be left empty) if the original representation is any geometry without area (e.g., a point or polyline) and without uncertainty and the given georeference is not that same geometry (without uncertainty). If both the original and the given georeference are the same point, the dwc:footprintSpatialFit is 1
   */
  "dwc:footprintSpatialFit"?: number;
  /**
   * The date on which the ods:Location was georeferenced
   */
  "dwc:georeferencedDate"?: string;
  /**
   * A description or reference to the methods used to determine the spatial footprint, coordinates, and uncertainties
   */
  "dwc:georeferenceProtocol"?: string;
  /**
   * A list (concatenated and separated) of maps, gazetteers, or other resources used to georeference the ods:Location, described specifically enough to allow anyone in the future to use the same resources
   */
  "dwc:georeferenceSources"?: string;
  /**
   * Notes or comments about the spatial description determination, explaining assumptions made in addition or opposition to the those formalized in the method referred to in dwc:georeferenceProtocol
   */
  "dwc:georeferenceRemarks"?: string;
  /**
   * The agent(s) involved in the georeferencing of this location, uses `ods:Agent`
   */
  "ods:hasAgents"?: Agent4[];
}
export interface Agent4 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
/**
 * An object which describes the geological context of th location of the specimen.
 */
export interface GeologicalContext {
  /**
   * The identifier for the Geological Context object.
   */
  "@id"?: string;
  /**
   * The type of the object, in this case ods:GeologicalContext
   */
  "@type": "ods:GeologicalContext";
  /**
   * The full name of the earliest possible geochronologic eon or lowest chrono-stratigraphic eonothem or the informal name ("Precambrian") attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:earliestEonOrLowestEonothem"?: string;
  /**
   * The full name of the latest possible geochronologic eon or highest chrono-stratigraphic eonothem or the informal name ("Precambrian") attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:latestEonOrHighestEonothem"?: string;
  /**
   * The full name of the earliest possible geochronologic era or lowest chronostratigraphic erathem attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:earliestEraOrLowestErathem"?: string;
  /**
   * The full name of the latest possible geochronologic era or highest chronostratigraphic erathem attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:latestEraOrHighestErathem"?: string;
  /**
   * The full name of the earliest possible geochronologic period or lowest chronostratigraphic system attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:earliestPeriodOrLowestSystem"?: string;
  /**
   * The full name of the latest possible geochronologic period or highest chronostratigraphic system attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:latestPeriodOrHighestSystem"?: string;
  /**
   * The full name of the earliest possible geochronologic epoch or lowest chronostratigraphic series attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:earliestEpochOrLowestSeries"?: string;
  /**
   * The full name of the latest possible geochronologic epoch or highest chronostratigraphic series attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:latestEpochOrHighestSeries"?: string;
  /**
   * The full name of the earliest possible geochronologic age or lowest chronostratigraphic stage attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:earliestAgeOrLowestStage"?: string;
  /**
   * The full name of the latest possible geochronologic age or highest chronostratigraphic stage attributable to the stratigraphic horizon from which the specimen was collected
   */
  "dwc:latestAgeOrHighestStage"?: string;
  /**
   * The full name of the lowest possible geological biostratigraphic zone of the stratigraphic horizon from which the specimen was collected
   */
  "dwc:lowestBiostratigraphicZone"?: string;
  /**
   * The full name of the highest possible geological biostratigraphic zone of the stratigraphic horizon from which the specimen was collected
   */
  "dwc:highestBiostratigraphicZone"?: string;
  /**
   * The combination of all litho-stratigraphic names for the rock from which the specimen was collected
   */
  "dwc:lithostratigraphicTerms"?: string;
  /**
   * The full name of the lithostratigraphic group from which the specimen was collected
   */
  "dwc:group"?: string;
  /**
   * The full name of the lithostratigraphic formation from which the specimen was collected
   */
  "dwc:formation"?: string;
  /**
   * The full name of the lithostratigraphic member from which the specimen was collected
   */
  "dwc:member"?: string;
  /**
   * The full name of the lithostratigraphic bed from which the specimen was collected
   */
  "dwc:bed"?: string;
}
export interface Agent5 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
export interface ChronometricAge {
  /**
   * The identifier for the Chronometric Age object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case ods:ChronometricAge
   */
  "@type": "ods:ChronometricAge";
  /**
   * An identifier for the set of information associated with a ChronometricAge
   */
  "chrono:chronometricAgeID"?: string;
  /**
   * The verbatim age for a specimen, whether reported by a dating assay, associated references, or legacy information
   */
  "chrono:verbatimChronometricAge"?: string;
  /**
   * The output of a dating assay before it is calibrated into an age using a specific conversion protocol.
   */
  "chrono:uncalibratedChronometricAge"?: string;
  /**
   * The method used for converting the uncalibratedChronometricAge into a chronometric age in years, as captured in the earliestChronometricAge, earliestChronometricAgeReferenceSystem, latestChronometricAge, and latestChronometricAgeReferenceSystem fields.
   */
  "chrono:chronometricAgeConversionProtocol"?: string;
  /**
   * The maximum/earliest/oldest possible age of a specimen as determined by a dating method
   */
  "chrono:earliestChronometricAge"?: number;
  /**
   * The reference system associated with the earliestChronometricAge
   */
  "chrono:earliestChronometricAgeReferenceSystem"?: string;
  /**
   * The minimum/latest/youngest possible age of a specimen as determined by a dating method
   */
  "chrono:latestChronometricAge"?: number;
  /**
   * The reference system associated with the latestChronometricAge
   */
  "chrono:latestChronometricAgeReferenceSystem"?: string;
  /**
   * A description of or reference to the methods used to determine the chronometric age.
   */
  "chrono:chronometricAgeProtocol"?: string;
  /**
   * The temporal uncertainty of the earliestChronometricAge and latestChronometicAge in years
   */
  "chrono:chronometricAgeUncertaintyInYears"?: number;
  /**
   * The method used to generate the value of chronometricAgeUncertaintyInYears
   */
  "chrono:chronometricAgeUncertaintyMethod"?: string;
  /**
   * A description of the material on which the chronometricAgeProtocol was actually performed, if known.
   */
  "chrono:materialDated"?: string;
  /**
   * An identifier for the MaterialSample on which the chronometricAgeProtocol was performed, if applicable
   */
  "chrono:materialDatedID"?: string;
  /**
   * The relationship of the materialDated to the subject of the ChronometricAge record, from which the ChronometricAge of the subject is inferred
   */
  "chrono:materialDatedRelationship"?: string;
  /**
   * The date on which the ChronometricAge was determined
   */
  "chrono:chronometricAgeDeterminedDate"?: string;
  /**
   * A list (concatenated and separated) of identifiers (publication, bibliographic reference, global unique identifier, URI) of literature associated with the ChronometricAge.
   */
  "chrono:chronometricAgeReferences"?: string;
  /**
   * Notes or comments about the ChronometricAge
   */
  "chrono:chronometricAgeRemarks"?: string;
  /**
   * The agent(s) involved in the determination of the chronometric age, uses `ods:Agent`
   */
  "ods:hasAgents"?: Agent6[];
}
export interface Agent6 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
export interface Assertion2 {
  /**
   * Identical to the `dwc:measurementID`. An identifier for the dwc:MeasurementOrFact (information pertaining to measurements, facts, characteristics, or assertions). May be a global unique identifier or an identifier specific to the data set
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Assertion
   */
  "@type": "ods:Assertion";
  /**
   * An identifier for the dwc:MeasurementOrFact (information pertaining to measurements, facts, characteristics, or assertions). May be a global unique identifier or an identifier specific to the data set
   */
  "dwc:measurementID"?: string;
  /**
   * An identifier for a broader dwc:MeasurementOrFact that groups this and potentially other ods:Assertions
   */
  "dwc:parentMeasurementID"?: string;
  /**
   * The nature of the assertion
   */
  "dwc:measurementType"?: string;
  /**
   * The nature of the assertion
   */
  "dwciri:measurementType"?: string;
  /**
   * The date on which the dwc:MeasurementOrFact was made
   */
  "dwc:measurementDeterminedDate"?: string;
  /**
   * The value of the assertion
   */
  "dwc:measurementValue"?: string;
  /**
   * The value of the assertion
   */
  "dwciri:measurementValue"?: string;
  /**
   * The description of the potential error associated with the dwc:measurementValue
   */
  "dwc:measurementAccuracy"?: string;
  /**
   * The units associated with the dwc:measurementValue
   */
  "dwc:measurementUnit"?: string;
  /**
   * The units associated with the dwc:measurementValue
   */
  "dwciri:measurementUnit"?: string;
  /**
   * A description of or reference to (publication, URI) the method or protocol used to determine the measurement, fact, characteristic, or assertion
   */
  "dwc:measurementMethod"?: string;
  /**
   * A description of or reference to (publication, URI) the method or protocol used to determine the measurement, fact, characteristic, or assertion
   */
  "dwciri:measurementMethod"?: string;
  /**
   * Comments or notes accompanying the dwc:MeasurementOrFact
   */
  "dwc:measurementRemarks"?: string;
  /**
   * The agent(s) who made the assertion, contains an ods:Agent object
   */
  "ods:hasAgents"?: Agent2[];
  /**
   * Contains the publication citation(s) that support the assertion
   */
  "ods:hasCitations"?: Citation1[];
}
/**
 * Based on https://rs.gbif.org/extension/resource_relationship_2024-02-19.xml but with ods specific terms
 */
export interface EntityRelationship {
  /**
   * The identifier for Entity Relationship digital object.
   */
  "@id"?: string;
  /**
   * The type of the record, in this case a ods:EntityRelationship
   */
  "@type": "ods:EntityRelationship";
  /**
   * The relationship of the subject (identified by dwc:resourceID) to the object (identified by dwc:relatedResourceID)
   */
  "dwc:relationshipOfResource": string;
  /**
   * An identifier for the relationship type (predicate) that connects the subject identified by dwc:resourceID to its object identified by dwc:relatedResourceID
   */
  "dwc:relationshipOfResourceID"?: string;
  /**
   * An identifier for a related resource (the object, rather than the subject of the relationship)
   */
  "dwc:relatedResourceID": string;
  /**
   * The full resolvable URI to the related resource
   */
  "ods:relatedResourceURI"?: string;
  /**
   * The date-time on which the relationship between the two resources was established, following the ISO Date Time Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX
   */
  "dwc:relationshipEstablishedDate"?: string;
  /**
   * Comments or notes about the relationship between the two resources
   */
  "dwc:relationshipRemarks"?: string;
  /**
   * The agent(s) who created the entityRelationship, contains an ods:Agent object
   */
  "ods:hasAgents"?: Agent7[];
}
export interface Agent7 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
export interface Identification1 {
  /**
   * The identifier for the Identification object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Identification
   */
  "@type": "ods:Identification";
  /**
   * https://rs.tdwg.org/dwc/terms/identificationID
   */
  "dwc:identificationID"?: string;
  /**
   * Indicates the type of identification. At the moment only ods:TaxonIdentification is supports. Expected to be extend with identification types for Geological or Mineral Identifications
   */
  "ods:identificationType"?: "TaxonIdentification";
  /**
   * A string representing the identification as it appeared in the original record
   */
  "dwc:verbatimIdentification"?: string;
  /**
   * A list (concatenated and separated) of nomenclatural types (type status, typified scientific name, publication) applied to the subject
   */
  "dwc:typeStatus"?: string;
  /**
   * The date on which the subject was determined
   */
  "dwc:dateIdentified"?: string;
  /**
   * If this is the accepted identification, based on https://rs.tdwg.org/dwc/terms/identificationVerificationStatus
   */
  "ods:isVerifiedIdentification": boolean;
  /**
   * Comments or notes about the ods:Identification
   */
  "dwc:identificationRemarks"?: string;
  /**
   * A brief phrase or a standard term ("cf.", "aff.") to express the determiner's doubts about the dwc:Identification
   */
  "dwc:identificationQualifier"?: string;
  /**
   * The agent(s) involved in the identification, uses `ods:Agent`
   */
  "ods:hasAgents"?: Agent[];
  /**
   * Any citations associated with the identification
   */
  "ods:hasCitations"?: Citation[];
  /**
   * Contains the Taxonomic Identifications of the object
   */
  "ods:hasTaxonIdentifications"?: TaxonIdentification[];
}
/**
 * Object used to describe identifiers of a Digital Object, based on https://rs.gbif.org/extension/gbif/1.0/identifier.xml but includes ods specific terms
 */
export interface Identifier2 {
  /**
   * The identifier for the Identifier object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Identifier
   */
  "@type": "ods:Identifier";
  /**
   * A name for the identifier
   */
  "dcterms:title": string;
  /**
   * The type of the value in the `dcterms:identifier` field
   */
  "dcterms:type"?:
    | "ARK"
    | "arXiv"
    | "bibcode"
    | "DOI"
    | "EAN13"
    | "EISSN"
    | "Handle"
    | "IGSN"
    | "ISBN"
    | "ISSN"
    | "ISTC"
    | "LISSN"
    | "LSID"
    | "PMID"
    | "PURL"
    | "UPC"
    | "URL"
    | "URN"
    | "w3id"
    | "UUID"
    | "Other"
    | "Locally unique identifier";
  /**
   * The value for the identifier
   */
  "dcterms:identifier": string;
  /**
   * All possible mime types of content that can be returned by identifier in case the identifier is resolvable. Plain UUIDs for example do not have a dc:format return type, as they are not resolvable on their own. For a list of MIME types see the list maintained by IANA: http://www.iana.org/assignments/media-types/index.html, in particular the text http://www.iana.org/assignments/media-types/text/ and application http://www.iana.org/assignments/media-types/application/ types. Frequently used values are text/html, text/xml, application/rdf+xml, application/json
   */
  "dcterms:format"?: string[];
  /**
   * Additional keywords that the publisher may prefer to be attached to the identifier
   */
  "dcterms:subject"?: string[];
  /**
   * Indicates whether the identifier is part of the physical label
   */
  "ods:isPartOfLabel"?: boolean;
  /**
   * Indicates whether the identifier is a persistent identifier
   */
  "ods:gupriLevel"?:
    | "LocallyUniqueStable"
    | "GloballyUniqueStable"
    | "GloballyUniqueStableResolvable"
    | "GloballyUniqueStablePersistentResolvable"
    | "GloballyUniqueStablePersistentResolvableFDOCompliant";
  /**
   * Indicates the status of the identifier
   */
  "ods:identifierStatus"?: "Preferred" | "Alternative" | "Superseded";
}
/**
 * Based on https://rs.gbif.org/extension/gbif/1.0/references.xml but includes ods specific terms
 */
export interface Citation2 {
  /**
   * The main identifier of the citation, preferably a DOI, ISBN, URI, etc referring to the reference
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case a ods:Citation
   */
  "@type": "ods:Citation";
  /**
   * The main identifier of the citation, preferably a DOI, ISBN, URI, etc referring to the reference
   */
  "dcterms:identifier"?: string;
  /**
   * The category that best matches the nature of a reference
   */
  "dcterms:type"?: string;
  /**
   * Date of publication
   */
  "dcterms:date"?: string;
  /**
   * Title of publication
   */
  "dcterms:title"?: string;
  /**
   * Page number of the citation
   */
  "ods:pageNumber"?: string;
  /**
   * Abstracts, remarks, notes
   */
  "dcterms:description"?: string;
  /**
   * A bibliographic reference for the resource
   */
  "dcterms:bibliographicCitation": string;
  /**
   * Is the citation peer reviewed?
   */
  "ods:isPeerReviewed"?: boolean;
  /**
   * The agent(s) who made the publication, contains an ods:Agent object
   */
  "ods:hasAgents"?: Agent1[];
}
export interface Agent8 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
/**
 * Contains all information about a particular Event, which is an activity at a moment in time, at a specific location made by an agent
 */
export interface Event1 {
  /**
   * The identifier for the Event object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case ods:Event
   */
  "@type": "ods:Event";
  /**
   * The behavior shown by the subject at the time the event was recorded
   */
  "dwc:behavior"?: string;
  /**
   * The nature of the ods:Event. There can always be only one collecting event
   */
  "dwc:eventType"?: string;
  /**
   * The sex of the biological individual(s) represented in the dwc:Event
   */
  "dwc:sex"?: string;
  /**
   * The age class or life stage at the time the ods:Event was recorded
   */
  "dwc:lifeStage"?: string;
  /**
   * The reproductive condition of the biological individual(s) represented in the ods:Event.
   */
  "dwc:reproductiveCondition"?: string;
  /**
   * Categorisation of individuals for eusocial species (including some mammals and arthropods)
   */
  "dwc:caste"?: string;
  /**
   * An indication of whether the specimen was alive or dead at the time of collection or observation
   */
  "dwc:vitality"?: string;
  /**
   * Statement about whether a organism has been introduced to a given place and time through the direct or indirect activity of modern humans
   */
  "dwc:establishmentMeans"?: string;
  /**
   * The process by which an organism came to be in a given place at a given time
   */
  "dwc:pathway"?: string;
  /**
   * The degree to which an organism survives, reproduces, and expands its range at the given place and time
   */
  "dwc:degreeOfEstablishment"?: string;
  /**
   * A categorical description of the extent to which the georeference has been verified to represent the best possible spatial description for the ods:Location of the ods:Event
   */
  "dwc:georeferenceVerificationStatus"?: string;
  /**
   * An identifier given to the ods:Event in the field. Often serves as a link between field notes and the ods:Event
   */
  "dwc:fieldNumber"?: string;
  /**
   * The date-time or interval during which a ods:Event occurred. For occurrences, this is the date-time when the ods:Event was recorded. Not suitable for a time in a geological context
   */
  "dwc:eventDate"?: string;
  /**
   * The time or interval during which a ods:Event occurred
   */
  "dwc:eventTime"?: string;
  /**
   * The latest integer day of the year on which the ods:Event occurred (1 for January 1, 365 for December 31, except in a leap year, in which case it is 366)
   */
  "dwc:endDayOfYear"?: number;
  /**
   * The earliest integer day of the year on which the ods:Event occurred (1 for January 1, 365 for December 31, except in a leap year, in which case it is 366)
   */
  "dwc:startDayOfYear"?: number;
  /**
   * The verbatim original representation of the date and time information for a ods:Event
   */
  "dwc:verbatimEventDate"?: string;
  /**
   * The four-digit year in which the ods:Event occurred, according to the Common Era Calendar
   */
  "dwc:year"?: number;
  /**
   * The integer month in which the ods:Event occurred
   */
  "dwc:month"?: number;
  /**
   * The integer day of the month on which the ods:Event occurred
   */
  "dwc:day"?: number;
  /**
   * A category or description of the habitat in which the ods:Event occurred
   */
  "dwc:habitat"?: string;
  /**
   * A detailed description of the methods used during the ods:Event
   */
  "eco:protocolDescriptions"?: string;
  /**
   * A numeric value for a measurement of the size (time duration, length, area, or volume) of a sample in a sampling ods:Event
   */
  "dwc:sampleSizeValue"?: number;
  /**
   * The unit of measurement of the size (time duration, length, area, or volume) of a sample in a sampling ods:Event
   */
  "dwc:sampleSizeUnit"?: string;
  /**
   * The names of, references to, or descriptions of the methods or protocols used during a ods:Event
   */
  "dwc:samplingProtocol"?: string;
  /**
   * The amount of effort expended during a ods:Event
   */
  "dwc:samplingEffort"?: string;
  /**
   * One of a) an indicator of the existence of, b) a reference to (publication, URI), or c) the text of notes taken in the field about the ods:Event
   */
  "dwc:fieldNotes"?: string;
  /**
   * Comments or notes about the ods:Event
   */
  "dwc:eventRemarks"?: string;
  /**
   * Contains additional information about the ods:Event in the form of assertions
   */
  "ods:hasAssertions"?: Assertion1[];
  /**
   * Contains all agents that are connected to the specific event
   */
  "ods:hasAgents"?: Agent3[];
  "ods:hasLocation"?: Location;
}
export interface ChronometricAge1 {
  /**
   * The identifier for the Chronometric Age object.
   */
  "@id"?: string;
  /**
   * The type of the digital object, in this case ods:ChronometricAge
   */
  "@type": "ods:ChronometricAge";
  /**
   * An identifier for the set of information associated with a ChronometricAge
   */
  "chrono:chronometricAgeID"?: string;
  /**
   * The verbatim age for a specimen, whether reported by a dating assay, associated references, or legacy information
   */
  "chrono:verbatimChronometricAge"?: string;
  /**
   * The output of a dating assay before it is calibrated into an age using a specific conversion protocol.
   */
  "chrono:uncalibratedChronometricAge"?: string;
  /**
   * The method used for converting the uncalibratedChronometricAge into a chronometric age in years, as captured in the earliestChronometricAge, earliestChronometricAgeReferenceSystem, latestChronometricAge, and latestChronometricAgeReferenceSystem fields.
   */
  "chrono:chronometricAgeConversionProtocol"?: string;
  /**
   * The maximum/earliest/oldest possible age of a specimen as determined by a dating method
   */
  "chrono:earliestChronometricAge"?: number;
  /**
   * The reference system associated with the earliestChronometricAge
   */
  "chrono:earliestChronometricAgeReferenceSystem"?: string;
  /**
   * The minimum/latest/youngest possible age of a specimen as determined by a dating method
   */
  "chrono:latestChronometricAge"?: number;
  /**
   * The reference system associated with the latestChronometricAge
   */
  "chrono:latestChronometricAgeReferenceSystem"?: string;
  /**
   * A description of or reference to the methods used to determine the chronometric age.
   */
  "chrono:chronometricAgeProtocol"?: string;
  /**
   * The temporal uncertainty of the earliestChronometricAge and latestChronometicAge in years
   */
  "chrono:chronometricAgeUncertaintyInYears"?: number;
  /**
   * The method used to generate the value of chronometricAgeUncertaintyInYears
   */
  "chrono:chronometricAgeUncertaintyMethod"?: string;
  /**
   * A description of the material on which the chronometricAgeProtocol was actually performed, if known.
   */
  "chrono:materialDated"?: string;
  /**
   * An identifier for the MaterialSample on which the chronometricAgeProtocol was performed, if applicable
   */
  "chrono:materialDatedID"?: string;
  /**
   * The relationship of the materialDated to the subject of the ChronometricAge record, from which the ChronometricAge of the subject is inferred
   */
  "chrono:materialDatedRelationship"?: string;
  /**
   * The date on which the ChronometricAge was determined
   */
  "chrono:chronometricAgeDeterminedDate"?: string;
  /**
   * A list (concatenated and separated) of identifiers (publication, bibliographic reference, global unique identifier, URI) of literature associated with the ChronometricAge.
   */
  "chrono:chronometricAgeReferences"?: string;
  /**
   * Notes or comments about the ChronometricAge
   */
  "chrono:chronometricAgeRemarks"?: string;
  /**
   * The agent(s) involved in the determination of the chronometric age, uses `ods:Agent`
   */
  "ods:hasAgents"?: Agent6[];
}
/**
 * Object containing the tombstone metadata of the object. Only present when ods:status is ods:Tombstone
 */
export interface TombstoneMetadata {
  /**
   * The type of the record, in this case a ods:Tombstone
   */
  "@type": "ods:Tombstone";
  /**
   * Timestamp the Digital Object was tombstoned and no longer active. Following the ISO Date Time Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX
   */
  "ods:tombstoneDate": string;
  /**
   * A reason why the Digital Object was tombstoned
   */
  "ods:tombstoneText": string;
  /**
   * The agent(s) who tombstoned the Digital Object, contains an ods:Agent object
   *
   * @minItems 1
   */
  "ods:hasAgents": [Agent9, ...Agent9[]];
  /**
   * The PIDs of the object the tombstoned object is related to
   */
  "ods:hasRelatedPIDs"?: {
    /**
     * The type of the object, in this case a ods:RelatedPID
     */
    "@type": "ods:RelatedPID";
    /**
     * The PID of the related object, used in cases of `ods:Annotation`, `ods:DigitalMedia` and `ods:DigitalSpecimen`
     */
    "dcterms:identifier"?: string;
    /**
     * The PID of the related object, used in cases of `ods:DataMapping`, `ods:SourceSystem` and `ods:MachineAnnotationService`
     */
    "schema:identifier"?: string;
    /**
     * The type of relationship between the tombstoned object and the related object
     */
    "ods:relationshipType": string;
  }[];
}
export interface Agent9 {
  /**
   * The identifier for the Agent object
   */
  "@id"?: string;
  /**
   * The type of the agent, the prov ontology is only used in the prov-o ods:CreateUpdateTombstoneEvent
   */
  "@type":
    | "schema:Person"
    | "schema:Organization"
    | "schema:SoftwareApplication"
    | "prov:Person"
    | "prov:SoftwareAgent";
  /**
   * The primary unique identifier of the Agent object. All identifiers will also be added to the ods:hasIdentifiers array
   */
  "schema:identifier"?: string;
  /**
   * Full name of the agent
   */
  "schema:name"?: string;
  /**
   * Contains all roles associated with the agent in the context of the Digital Object. Should always contain at least one role
   *
   * @minItems 1
   */
  "ods:hasRoles"?: [
    {
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    },
    ...{
      /**
       * The identifier for the agent role, preferably a URL to a controlled vocabulary
       */
      "@id"?: string;
      /**
       * The type of the object, in this case schema:Role
       */
      "@type": "schema:Role";
      /**
       * The category that best matches the nature of a role of an Agent
       */
      "schema:roleName": string;
      /**
       * Date the agent began the role
       */
      "schema:startDate"?: string;
      /**
       * Date the agent ended the role
       */
      "schema:endDate"?: string;
      /**
       * Can be used to indicate the order of importance when there are multiple agents with the same role. Lower order means higher importance.
       */
      "schema:position"?: number;
    }[]
  ];
  /**
   * Email of the agent
   */
  "schema:email"?: string;
  /**
   * URL to a website of the agent
   */
  "schema:url"?: string;
  /**
   * Contains all identifiers associated with the agent
   */
  "ods:hasIdentifiers"?: Identifier[];
}
